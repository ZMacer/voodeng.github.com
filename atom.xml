<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Voodeng's]]></title>
  <link href="http://voodeng.com/atom.xml" rel="self"/>
  <link href="http://voodeng.com/"/>
  <updated>2012-11-09T01:55:41+08:00</updated>
  <id>http://voodeng.com/</id>
  <author>
    <name><![CDATA[Voodeng]]></name>
    <email><![CDATA[voodeng@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[百度的100g网盘]]></title>
    <link href="http://voodeng.com/blog/2012/09/03/bai-du-100g-wang-pan/"/>
    <updated>2012-09-03T11:58:00+08:00</updated>
    <id>http://voodeng.com/blog/2012/09/03/bai-du-100g-wang-pan</id>
    <content type="html"><![CDATA[<p>终于，国内互联网的大哥们已经进入了这个网盘地带<br/>
终于，和当年的gmail时代一样，gamil的降临带领邮件从100mb空间一下直接奔上了G时代，没个几G的邮箱空间，都不好意思和别人打招呼。<br/>
现阶段，从国外的dropbox，skydriver，google drive等，到国内的115，快盘，everbox，坚果云等，还有现在的 百度云，各种选择。</p>

<p>今天百度云上线并且有100g的空间，不过，仔细看一下图片<br/>
<img src="http://thumbsnap.com/s/ziwnGp82.jpg" alt="百度100g网盘" /><br/>
一年的使用权，也就是说，这多出的100g也只是给你玩一年的，那么，如果一年后空间存满了咋办？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sina的api真是要命了 | jquery读取新浪微博api]]></title>
    <link href="http://voodeng.com/blog/2012/09/03/sina-weibo-api-on-jquery/"/>
    <updated>2012-09-03T02:59:00+08:00</updated>
    <id>http://voodeng.com/blog/2012/09/03/sina-weibo-api-on-jquery</id>
    <content type="html"><![CDATA[<blockquote><ol>
<li><a href="#sina">吐槽先</a></li>
<li><a href="#json">json数据分析</a>

<ul>
<li><a href="#json2">自行获取的json</a></li>
</ul>
</li>
<li><a href="#jquery">使用jquery获取数据</a>

<ul>
<li><a href="#wan">注意</a></li>
</ul>
</li>
<li><a href="#nodelist">常用的数据节点列表</a></li>
</ol>
</blockquote>

<h2><a name="sina">用sina的孩子伤不起啊</a></h2>

<p>本来人就不太聪明，搞了一个下午才能把sina那个api给看完，实验玩，很久没这样了，真心要人命哟，尤其是这个js的api，官方文档那真是个简单明啊，有好些部分都没列出来，不过也基本够用了。</p>

<p>附上 <strong><a href="https://docs.google.com/document/d/1Rm7gjFcM45sE3HUA9yxW5Gtj2D7AjweGaGLo6j5K9-c/edit">Google Doc 文档记录</a> </strong></p>

<p><del>先记录下，有时间就把它们补充</del></p>

<hr />

<h2><a name="json">新浪api 以及json数据分析</a></h2>

<h3>官方文档 JSON示例</h3>

<!--more-->


<blockquote><pre><code>{
    "statuses": [
        {
            "created_at": "Tue May 31 17:46:55 +0800 2011",
            "id": 11488058246,
            "text": "求关注。"，
            "source": "&lt;a href="http://weibo.com" rel="nofollow"&gt;新浪微博&lt;/a&gt;",
            "favorited": false,
            "truncated": false,
            "in_reply_to_status_id": "",
            "in_reply_to_user_id": "",
            "in_reply_to_screen_name": "",
            "geo": null,
            "mid": "5612814510546515491",
            "reposts_count": 8,
            "comments_count": 9,
            "annotations": [],
            "user": {
                "id": 1404376560,
                "screen_name": "zaku",
                "name": "zaku",
                "province": "11",
                "city": "5",
                "location": "北京 朝阳区",
                "description": "人生五十年，乃如梦如幻；有生斯有死，壮士复何憾。",
                "url": "http://blog.sina.com.cn/zaku",
                "profile_image_url": "http://tp1.sinaimg.cn/1404376560/50/0/1",
                "domain": "zaku",
                "gender": "m",
                "followers_count": 1204,
                "friends_count": 447,
                "statuses_count": 2908,
                "favourites_count": 0,
                "created_at": "Fri Aug 28 00:00:00 +0800 2009",
                "following": false,
                "allow_all_act_msg": false,
                "remark": "",
                "geo_enabled": true,
                "verified": false,
                "allow_all_comment": true,
                "avatar_large": "http://tp1.sinaimg.cn/1404376560/180/0/1",
                "verified_reason": "",
                "follow_me": false,
                "online_status": 0,
                "bi_followers_count": 215
            }
        },
        ...
    ],
    "previous_cursor": 0,
    "next_cursor": 11488013766,
    "total_number": 81655
}
</code></pre></blockquote>

<h3><a name="json2">自行获取的节点：</a></h3>

<blockquote><pre><code>{
  "code": 1,
  "data": 
  {
"statuses": 
    [
      {
        "created_at": "Sun Sep 02 20:23:26 +0800 2012",
        "id": 3485907627656823,
        "mid": "3485907627656823",
        "idstr": "3485907627656823",
        "text": "唉，坑爹啊~",
        "source": "&lt;a href=\"http://weibo.com/\" rel=\"nofollow\"&gt;新浪微博&lt;/a&gt;",
        "favorited": false,
        "truncated": false,
        "in_reply_to_status_id": "",
        "in_reply_to_user_id": "",
        "in_reply_to_screen_name": "",
        "geo": null,
        "user": {
          "id": 2092274257,
          "idstr": "2092274257",
          "screen_name": "Voodeng",
          "name": "Voodeng",
          "province": "43",
          "city": "1",
          "location": "湖南 长沙",
          "description": "nothing but Design",
          "url": "http://voodeng.com",
          "profile_image_url": "http://tp2.sinaimg.cn/2092274257/50/5629719914/1",
          "profile_url": "voodeng",
          "domain": "voodeng",
          "weihao": "",
          "gender": "m",
          "followers_count": 97,
          "friends_count": 306,
          "statuses_count": 118,
          "favourites_count": 1,
          "created_at": "Mon Apr 18 03:53:42 +0800 2011",
          "following": false,
          "allow_all_act_msg": false,
          "geo_enabled": true,
          "verified": false,
          "verified_type": -1,
          "remark": "",
          "allow_all_comment": true,
          "avatar_large": "http://tp2.sinaimg.cn/2092274257/180/5629719914/1",
          "verified_reason": "",
          "follow_me": false,
          "online_status": 0,
          "bi_followers_count": 36,
          "lang": "zh-cn"
        },
        "retweeted_status": {
          "created_at": "Fri Aug 31 15:12:48 +0800 2012",
          "id": 3485104683296626,
          "mid": "3485104683296626",
          "idstr": "3485104683296626",
          "text": "南大学生通过拨号音破解 @周鸿祎 的手机号， @李开复 发求贤邀请。 http://weibo.com/1197161814/yzF4SCIEU —— 我想说的是，想知道 @周鸿祎 的手机号不用这么麻烦，直接搜索就行了……",
          "source": "&lt;a href=\"http://weibo.com/\" rel=\"nofollow\"&gt;新浪微博&lt;/a&gt;",
          "favorited": false,
          "truncated": false,
          "in_reply_to_status_id": "",
          "in_reply_to_user_id": "",
          "in_reply_to_screen_name": "",
          "thumbnail_pic": "http://ww3.sinaimg.cn/thumbnail/61df4fe4jw1dwfvu0dnhhj.jpg",
          "bmiddle_pic": "http://ww3.sinaimg.cn/bmiddle/61df4fe4jw1dwfvu0dnhhj.jpg",
          "original_pic": "http://ww3.sinaimg.cn/large/61df4fe4jw1dwfvu0dnhhj.jpg",
          "geo": null,
          "user": {
            "id": 1642024932,
            "idstr": "1642024932",
            "screen_name": "Arki",
            "name": "Arki",
            "province": "11",
            "city": "8",
            "location": "北京 海淀区",
            "description": "动物界，男子动物门，水瓶座动物纲，弧眉线目，理工科，有家属，基情种，半文青，伪程序猿，原产于长江中下游地区，现放养于汴大燕园。",
            "url": "http://www.arkiwang.com",
            "profile_image_url": "http://tp1.sinaimg.cn/1642024932/50/5602044637/1",
            "profile_url": "anonymous",
            "domain": "anonymous",
            "weihao": "",
            "gender": "m",
            "followers_count": 3378,
            "friends_count": 889,
            "statuses_count": 1971,
            "favourites_count": 80,
            "created_at": "Wed Aug 26 13:56:10 +0800 2009",
            "following": false,
            "allow_all_act_msg": false,
            "geo_enabled": true,
            "verified": false,
            "verified_type": -1,
            "remark": "",
            "allow_all_comment": true,
            "avatar_large": "http://tp1.sinaimg.cn/1642024932/180/5602044637/1",
            "verified_reason": "",
            "follow_me": false,
            "online_status": 0,
            "bi_followers_count": 537,
            "lang": "zh-cn"
          },
          "reposts_count": 198,
          "comments_count": 39,
          "attitudes_count": 0,
          "mlevel": 0,
          "visible": {
            "type": 0,
            "list_id": 0
          }
        },
        "reposts_count": 0,
        "comments_count": 0,
        "attitudes_count": 0,
        "mlevel": 0,
        "visible": {
          "type": 0,
          "list_id": 0
        }
      }
    ]
  }
}
</code></pre></blockquote>

<h3><a name="jquery">获取方式：</a></h3>

<p><strong>jquery ajax</strong></p>

<blockquote><pre><code>$.ajax({  
    // Weibo API.  
    url: "https://api.weibo.com/2/statuses/user_timeline.json",  
    type: "GET",  
    dataType: "jsonp",  
    data: {  
        source: "app key",  
        uid: "user id", 
        count: 2  
    },  
    success: function(data, textStatus, xhr){  
      var weibo = data.data.statuses;
      var length = weibo.length;
      var fragment = document.createDocumentFragment();   
      for (var i=0; i&lt;length; i++){
      var item = document.createElement('li');
      item.innerHTML = linkify(weibo[i].text) + weibo[i].retweeted_status.text + '&lt;small&gt;'+weibo[i].created_at+'&lt;/small&gt;';
      fragment.appendChild(item);}
      document.body.appendChild(fragment);
      var str= '';
      $.each(weibo,function(i){
          w=weibo[i];
          str+='&lt;ol&gt;';
          str+='&lt;li&gt;'+w.id+'&lt;/li&gt;';
          str+='&lt;li&gt;'+w.text+'&lt;/li&gt;';
          str+='&lt;/ol&gt;'
      });
      //$("#content").html(str);
alert(weibo.length)
       // alert(data.data.length)         
    }  
})  
</code></pre></blockquote>

<p>整理一下</p>

<blockquote><pre><code>$.ajax({  
    // Weibo API.  调用 user_timeline.json 其他参考api文档
    url: "https://api.weibo.com/2/statuses/user_timeline.json",  
    type: "GET",  
    dataType: "jsonp",  
    data: {  
        source: "你的APP KEY",  
        uid: "目标用户id", 
        count: 获取微博条数 
    },  
    success: function(data, textStatus, xhr){  
        //读取成功后执行函数
        var weibo = data.data.statuses;
        var length = weibo.length;
        alert(weibo.length)        
    }  
})  
</code></pre></blockquote>

<p><strong><a name="wan">!!这里注意一下</a></strong></p>

<p>由于现在新浪的API升级咯，验证方式也改为Oauth2.0 的，老版本的还能用，不过建议使用新的，毕竟保证不了那天出问题。</p>

<p>新的WEIBO-JS SDK中，调用的都是前缀 https://api.weibo.com/2/ 这样的地址</p>

<p>这里我习惯是使用Jquery来用，不过 $.get() , $.getJSON() 函数获取不了数据<br/>
<strong>只能使用$.ajax() 并且 dataType: &#8220;jsonp&#8221;</strong> <br/>
应该是js的跨域访问问题</p>

<h3>数据存储点：</h3>

<p>var weibo = data.data.statuses  //  这是获取的数据数组</p>

<p>读取数组 weibo[i].xxx   // xxx就是节点里的内容，i 代表数字，从0开始，0表示第一个</p>

<p>通常读取方式weibo[i].xxx.xxx</p>

<h4><a name="nodelist">主要节点：</a></h4>

<pre><code>.created_at = 微博创建时间
.id  = 微博的id
.text = 微博内容
.source = 微博发布来源，微博左下角的文章出处

.user = 微博发布者的信息，是一个对象数组
.user.id = 用户id
.user.screen_name = 用户昵称
.user.profile_image_url = 用户小头像 
.user.profile_url = 用户地址 weibo.com/xxxx (xxx处的数据)

.retweeted_status = 转发的微博数据数组，和上面的节点结构一样
weibo[i].retweeted_status.user.id = 转发的微博源作者id
</code></pre>

<h2>备注:</h2>

<ol>
<li>参考 新浪微博开放平台官方<a href="http://open.weibo.com/wiki/API%E6%96%87%E6%A1%A3_V2">API V2 文档</a></li>
<li>如果返回错误，参考<a href="http://open.weibo.com/wiki/Error_code">API error code</a></li>
<li>新浪微博开放平台官方<a href="http://open.weibo.com/wiki/Weibo-JS_V2">JSSDK(WEIBO-JS-V2)使用示例</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github page 上使用 Octopress]]></title>
    <link href="http://voodeng.com/blog/2012/09/02/octopress-on-github/"/>
    <updated>2012-09-02T09:47:00+08:00</updated>
    <id>http://voodeng.com/blog/2012/09/02/octopress-on-github</id>
    <content type="html"><![CDATA[<h2>好处多多</h2>

<p>相信现在这年头，写点程序的骚年们都知道这个Github了，可谓用途多多.<br/>
1. 用它可以建立<strong>无限个</strong>公开的Git rep。<br/>
2. 每个rep大约有<strong>300mb的空间</strong>，看到这就明白了吧，300mb对于一个bolg空间来说是足足够够的了，当然，别弄一些图片之类的东西上去咯。<br/>
3. 版本控制，git本来就是个版本控制的东西嘛，这样文章就不用怕丢失之内的咯。<br/>
4. 无流量限制，木有流量限制的，而且速度够快，无非法内容（程序员是相对单纯的群体哦~），具有积极的社会推动作用！（Github是开源软件的集结地）。<br/>
5. 嗯~</p>

<h2>准备好Github</h2>

<p>首先，登入<a href="http://github.com">Github</a><br/>
建立一个以你用户名为准的rep，类似这样的http://username.github.com
对于Github还不晓得怎么用的，先点这里搜索一下~<br/>
<a href="http://www.baidu.com/s?tn=baiduhome_pg&amp;ie=utf-8&amp;bs=markdown&amp;f=3&amp;rsv_bp=1&amp;rsv_spt=1&amp;wd=github+%E4%BD%BF%E7%94%A8&amp;oq=github&amp;rsp=0&amp;rsv_sug2=0&amp;inputT=2435">> 百度搜索：Github 使用</a><br/>
<a href="http://www.google.com.hk/#hl=zh-CN&amp;newwindow=1&amp;safe=strict&amp;site=&amp;source=hp&amp;q=github+%E4%BD%BF%E7%94%A8&amp;oq=github+%E4%BD%BF%E7%94%A8&amp;gs_l=hp.3...3470.6688.0.6891.15.10.0.0.0.0.0.0..0.0...0.0..0.1c.zdjG5Bs-R9s&amp;bav=on.2,or.r_gc.r_pw.&amp;fp=f6573414b54b25d8&amp;biw=1393&amp;bih=907">> Google搜索：Github 使用</a></p>

<h2>Octopress的优势</h2>

<ul>
<li>源自基于ruby的Jekyll - 开源，随意修改</li>
<li>可部署到Github - 省钱嘛，能控制版本</li>
<li>md纯文本，无数据库 - 容易编辑修改，不易担心数据不可抗拒的损坏</li>
<li>Speed！！ - 纯文本的能不快嘛？</li>
<li>继续总结~</li>
</ul>


<h2>配置Octopress</h2>

<!-- more -->


<p>建立一个放置Oct的目录，这里是R文件夹，clone Oct程序到本地,替换username为你的自定义名称</p>

<pre><code>cd ~/R/
git clone git://github.com/imathis/octopress.git username.github.com
cd ~/R/username.github.com
bundle update   //升级一下gem
rake install    //生成相应的模板
</code></pre>

<p>准备部署到Github上面</p>

<pre><code>rake setup_github_pages    //配置github项目地址
//键入你的git源 git://github.com/username/username.github.com.git

rake new_post["心的方向"]   //建立新文章，文章存放在source/_post里面，格式为md的，现在就找个爽快点的[编辑器](#editor)来写文章了

rake preview  //开启站点预览，动态生成， http://127.0.0.1:4000
rake generate  //生成静态文件
rake gen_deploy  //生成静态并部署到github
</code></pre>

<p>选择性的备份source文件夹到github，这样就有了文章md源文件的版本管理</p>

<pre><code>git add .
git commit -m "保存source文件夹，文章源文件"
git push origin source   //建立sourch分支并保存
</code></pre>

<p>之后写文章就只常用到</p>

<pre><code>rake gen_deploy
//选择性推送source吧
</code></pre>

<hr />

<h2>备注：</h2>

<ol>
<li><a name="editor">编辑器:</a> 推荐用 sublime text 2 这个家伙，然后搭配上它的插件 MarkdownEditing (package里没有，要自行添加rep下载) 写md文档还是蛮爽快的，HOHO。</li>
<li>参考 Lucifr 的文章 <a href="http://lucifr.com/2012/07/12/markdownediting-for-sublime-text-2/">MarkdownEditing：Sublime Text 2 的 Markdown 利器</a>。</li>
<li>参考 <a href="http://markdown.tw/">Markdown语法文档</a>。</li>
</ol>

]]></content>
  </entry>
  
</feed>
